# =============================================================================
# BUILD PROJECT workflow
# =============================================================================
# This workflow is intended to prepare this project for deployment to
# a shared hosting environment.
# It is derived from the Bitbucket pipeline used to deploy the main
# SilentMode.tv site.
# The main difference is that we want to put this project inside a
# "minisites" folder, which will be symlinked from the current SilentMode.tv
# site's folder (which itself is a symlink for the public_html folder).
# =============================================================================

# Thanks to:
# https://github.com/marketplace/actions/deploy-with-envoy
# https://github.com/marketplace/actions/github-action-for-yarn
# https://github.com/dasundev/envoy-action
# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables#default-environment-variables
# https://stackoverflow.com/questions/60477061/github-actions-how-to-deploy-to-remote-server-using-ssh

name: Build project

on:
  # Trigger this workflow after a push on the "master" branch.
  push:
    branches: [ "master" ]

  # This allows us to run this workflow manually from the Actions tab on Github.
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer:v2

      - name: Create .env file
        run: |
          cp .env.production env
          php -r "file_put_contents('env', str_replace(\"[ENV_ADSENSE_CLIENT_ID]\", \"${{ secrets.ENV_ADSENSE_CLIENT_ID }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_ADSENSE_SLOT_ID]\", \"${{ secrets.ENV_ADSENSE_SLOT_ID }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_ANALYTICS_MEASUREMENT_ID]\", \"${{ secrets.ENV_ANALYTICS_MEASUREMENT_ID }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_ANALYTICS_PROPERTY_ID]\", \"${{ secrets.ENV_ANALYTICS_PROPERTY_ID }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_ANALYTICS_SAC_PROJECT_ID]\", \"${{ secrets.ENV_ANALYTICS_SAC_PROJECT_ID }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_ANALYTICS_SAC_PRIVATE_KEY_ID]\", \"${{ secrets.ENV_ANALYTICS_SAC_PRIVATE_KEY_ID }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_ANALYTICS_SAC_PRIVATE_KEY]\", \"${{ secrets.ENV_ANALYTICS_SAC_PRIVATE_KEY }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_ANALYTICS_SAC_CLIENT_EMAIL]\", \"${{ secrets.ENV_ANALYTICS_SAC_CLIENT_EMAIL }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_ANALYTICS_SAC_CLIENT_ID]\", \"${{ secrets.ENV_ANALYTICS_SAC_CLIENT_ID }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_ANALYTICS_SAC_CLIENT_X509_CERT_URL]\", \"${{ secrets.ENV_ANALYTICS_SAC_CLIENT_X509_CERT_URL }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_DB_DATABASE]\", \"${{ secrets.ENV_DB_DATABASE }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_DB_HOST]\", \"${{ secrets.ENV_DB_HOST }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_DB_PASSWORD]\", \"${{ secrets.ENV_DB_PASSWORD }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_DB_PORT]\", \"${{ secrets.ENV_DB_PORT }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_DB_USERNAME]\", \"${{ secrets.ENV_DB_USERNAME }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_MAIL_HOST]\", \"${{ secrets.ENV_MAIL_HOST }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_MAIL_PASSWORD]\", \"${{ secrets.ENV_MAIL_PASSWORD }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_MAIL_PORT]\", \"${{ secrets.ENV_MAIL_PORT }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_MAIL_USERNAME]\", \"${{ secrets.ENV_MAIL_USERNAME }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_OPENAI_API_KEY]\", \"${{ secrets.ENV_OPENAI_API_KEY }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_OPENAI_ORGANIZATION]\", \"${{ secrets.ENV_OPENAI_ORGANIZATION }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_PAYPAL_CLIENT_ID]\", \"${{ secrets.ENV_PAYPAL_CLIENT_ID }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_PAYPAL_SECRET]\", \"${{ secrets.ENV_PAYPAL_SECRET }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_SENTRY_LARAVEL_DSN]\", \"${{ secrets.ENV_SENTRY_LARAVEL_DSN }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_TURNSTILE_SECRET_KEY]\", \"${{ secrets.ENV_TURNSTILE_SECRET_KEY }}\", file_get_contents('env')));"
          php -r "file_put_contents('env', str_replace(\"[ENV_TURNSTILE_SITE_KEY]\", \"${{ secrets.ENV_TURNSTILE_SITE_KEY }}\", file_get_contents('env')));"

      - name: Install Composer dependencies
        # We're only interested in non-dev dependencies, but we will also add Laravel Envoy
        # for deploying the site.
        run: |
          composer require laravel/envoy --dev --no-ansi --no-interaction

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install yarn dependencies
        uses: borales/actions-yarn@v4
        with:
          cmd: install # runs yarn install.

      - name: Build Inertia app
        uses: borales/actions-yarn@v4
        with:
          cmd: build # runs yarn build.

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: project-artifact
          path: .
          include-hidden-files: true

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: project-artifact
          path: .

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH }}  # private key

      - name: Run Laravel Envoy
        run: |
          ssh-keyscan -t rsa ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
          php ./vendor/bin/envoy run deploy --run=${{ github.RUN_NUMBER }} --host="${{ secrets.DEPLOY_HOST }}" --user="${{ secrets.DEPLOY_USER }}" --path="${{ secrets.DEPLOY_PATH }}" --dir="${{ github.WORKSPACE }}" --su_email="${{ secrets.SUPER_EMAIL }}" --su_password="${{ secrets.SUPER_PASSWORD }}"

  release:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4
      - name: Create Sentry release
        uses: getsentry/action-release@v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          ignore_missing: true
