import { usePage } from '@inertiajs/react';
import { PayPalButtons, PayPalButtonsComponentProps, PayPalScriptProvider, ReactPayPalScriptOptions } from '@paypal/react-paypal-js';
import axios from 'axios';
import React from 'react';

// Generated by ChatGPT, modified by me.
// The ChatGPT solution manually added the PayPal JS SDK script to the page and rendered buttons,
// while I opted to use React components instead.
// https://developer.paypal.com/sdk/js/reference/

interface DonationButtonProps {
    currency: string;
}

interface OrderData {
    id: string;
    details?: {
        issue: string;
        description: string;
    }[];
    debug_id?: string;
}

export const PaypalButton: React.FC<DonationButtonProps> = ({ currency = 'USD' }) => {
    // see AppServiceProvider.php.
    const { paypalClientId } = usePage().props;

    const scriptOptions: ReactPayPalScriptOptions = {
        clientId: paypalClientId as string,
        disableFunding: ['credit'],
        enableFunding: ['card', 'venmo'],
    };

    const buttonStyle: PayPalButtonsComponentProps['style'] = {
        shape: 'rect',
        label: 'paypal',
        layout: 'horizontal',
        tagline: false,
    };

    /**
     * Set up a PayPal order (opens the popup window).
     * If successful, the order information is returned.
     */
    const createOrderHandler: PayPalButtonsComponentProps['createOrder'] = async (data, actions) => {
        return actions.order.create({
            intent: 'CAPTURE',
            purchase_units: [
                {
                    amount: {
                        currency_code: currency,
                        value: '10.00', // You can make this dynamic
                    },
                },
            ],
        });
    };

    /**
     * Capture the payment for the PayPal order.
     */
    const approveHandler: PayPalButtonsComponentProps['onApprove'] = async (data) => {
        // Capture the funds from the transaction.
        return axios
            .post('/my-server/capture-paypal-order', {
                orderID: data.orderID,
            })
            .then((response) => {
                // Show success message to buyer
                const details = response.data;
                alert(`Transaction completed by ${details.payer.name.given_name}.`);
            });
    };

    return (
        <PayPalScriptProvider options={scriptOptions}>
            <PayPalButtons style={buttonStyle} createOrder={createOrderHandler} onApprove={approveHandler} />
        </PayPalScriptProvider>
    );
};
