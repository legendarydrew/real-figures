<?php

// Originally generated by ChatGPT, modified by me.

namespace App\Http\Controllers\API;

use App\Http\Controllers\Controller;
use App\Services\PayPalService;
use Illuminate\Http\JsonResponse;

class DonationController extends Controller
{

    /**
     * Capture the payment for a PayPal order.
     *
     * @param \App\Services\PayPalService $paypal
     * @return JsonResponse|mixed
     */
    public function store(PayPalService $paypal): JsonResponse
    {
        // At this point the order should have COMPLETED status, as capturing happens in the front end.
        $transaction = $paypal->verifyOrder(request()->transaction_id);

        if (!$transaction || $transaction['status'] !== 'COMPLETED') {
            return response()->json(['error' => 'Transaction is invalid or imcomplete.'], 400);
        }

        // Success!
        // TODO we should record regular donations as well.
        $transaction_id = $transaction['id'];
        $amount = $transaction['purchase_units'][0]['payments']['captures'][0]['amount']['value'] ?? null;
        $email = $transaction['payer']['email_address'] ?? null;

        // To support refunds later, store capture_id as well â€” available in:
        // transaction.purchase_units[0].payments.captures[0].id

        return response()->json(['status' => "Verified!"], 201);
    }
}
