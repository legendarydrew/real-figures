import React, { useEffect } from 'react';
import { usePage } from '@inertiajs/react';
import axios from 'axios';
import {
    PayPalButtons,
    PayPalButtonsComponentProps,
    PayPalScriptProvider,
    ReactPayPalScriptOptions
} from "@paypal/react-paypal-js";

// Generated by ChatGPT, modified by me.
// https://developer.paypal.com/sdk/js/reference/

interface DonationButtonProps {
    currency: string;
}

interface OrderData {
    id: string;
    details?: {
      issue: string;
      description: string;
    }[];
    debug_id?: string;
}

export const PaypalButton: React.FC<DonationButtonProps> = ({ currency = 'USD' }) => {

    // see AppServiceProvider.php.
    const { paypalClientId } = usePage().props;

    const scriptOptions: ReactPayPalScriptOptions = {
        clientId: paypalClientId as string,
        disableFunding: ['credit'],
        enableFunding: ['card', 'venmo']
    };

    const buttonStyle: PayPalButtonsComponentProps["style"] = {
        shape: "rect",
        label: "paypal",
        layout: "horizontal",
    };

    // Set up a PayPal order (opens the popup window).
    const createOrderHandler: PayPalButtonsComponentProps["createOrder"] = async () => {
        return axios.post('/my-server/create-paypal-order', {
                cart: [{ id: "YOUR_PRODUCT_ID", quantity: "YOUR_PRODUCT_QUANTITY" }],
            })
            .then((response) => {
                const orderData = response.data;
                console.log(orderData);
                // if (!orderData.id) {
                //     const errorDetail = orderData.details[0];
                //     const errorMessage = errorDetail
                //         ? `${errorDetail.issue} ${errorDetail.description} (${orderData.debug_id})`
                //         : "Unexpected error occurred, please try again.";
      
                //     throw new Error(errorMessage);
                // }
                return orderData.id;
            })
            .catch((response) => {
                console.log('create order error', response);
            });
    };

    const approveHandler: PayPalButtonsComponentProps["onApprove"] = async (data) => {
        // Capture the funds from the transaction.
        return axios.post("/my-server/capture-paypal-order", {
                orderID: data.orderID,
            })
            .then((response) => {
                // Show success message to buyer
                const details = response.data;
                alert(`Transaction completed by ${details.payer.name.given_name}.`);
            });
    };

    return (
        <PayPalScriptProvider options={scriptOptions}>
            <PayPalButtons style={buttonStyle} createOrder={createOrderHandler} onApprove={approveHandler}/>
        </PayPalScriptProvider>
    );
};
